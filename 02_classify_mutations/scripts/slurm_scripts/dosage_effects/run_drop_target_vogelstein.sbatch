#!/bin/bash

#SBATCH -N 1
#SBATCH -t 0-24:00
#SBATCH --array=0-128%10
#SBATCH --cpus-per-task=8
#SBATCH --output=slurm_output/slurm-%A_%a.out
#SBATCH --error=slurm_output/slurm-%A_%a.err

# activate conda env
eval "$(conda shell.bash hook)"
conda activate ../mpmp-env2
echo "Environment loaded"

# run command for a given gene in the list
# all vogelstein genes here
genes=(
  "ABL1"
  "ACVR1B"
  "AKT1"
  "ALK"
  "AMER1"
  "APC"
  "AR"
  "ARID1A"
  "ARID1B"
  "ARID2"
  "ASXL1"
  "ATM"
  "ATRX"
  "AXIN1"
  "B2M"
  "BAP1"
  "BCL2"
  "BCOR"
  "BRAF"
  "BRCA1"
  "BRCA2"
  "CARD11"
  "CASP8"
  "CBL"
  "CDC73"
  "CDH1"
  "CDKN2A"
  "CEBPA"
  "CIC"
  "CREBBP"
  "CRLF2"
  "CSF1R"
  "CTNNB1"
  "CYLD"
  "DAXX"
  "DNMT1"
  "DNMT3A"
  "EGFR"
  "EP300"
  "ERBB2"
  "EZH2"
  "FAM123B"
  "FBXW7"
  "FGFR2"
  "FGFR3"
  "FLT3"
  "FOXL2"
  "FUBP1"
  "GATA1"
  "GATA2"
  "GATA3"
  "GNA11"
  "GNAQ"
  "GNAS"
  "H3F3A"
  "HIST1H3B"
  "HNF1A"
  "HRAS"
  "IDH1"
  "IDH2"
  "JAK1"
  "JAK2"
  "JAK3"
  "KDM5C"
  "KDM6A"
  "KIT"
  "KLF4"
  "KMT2C"
  "KMT2D"
  "KRAS"
  "MAP2K1"
  "MAP3K1"
  "MED12"
  "MEN1"
  "MET"
  "MLH1"
  "MLL2"
  "MLL3"
  "MPL"
  "MSH2"
  "MSH6"
  "MYD88"
  "NCOR1"
  "NF1"
  "NF2"
  "NFE2L2"
  "NOTCH1"
  "NOTCH2"
  "NPM1"
  "NRAS"
  "PAX5"
  "PBRM1"
  "PDGFRA"
  "PHF6"
  "PIK3CA"
  "PIK3R1"
  "PPP2R1A"
  "PRDM1"
  "PTCH1"
  "PTEN"
  "PTPN11"
  "RB1"
  "RET"
  "RNF43"
  "RUNX1"
  "SETBP1"
  "SETD2"
  "SF3B1"
  "SMAD2"
  "SMAD4"
  "SMARCA4"
  "SMARCB1"
  "SMO"
  "SOCS1"
  "SOX9"
  "SPOP"
  "SRSF2"
  "STAG2"
  "STK11"
  "TET2"
  "TNFAIP3"
  "TP53"
  "TRAF7"
  "TSC1"
  "TSHR"
  "U2AF1"
  "VHL"
  "WT1"
)

gene=${genes[${SLURM_ARRAY_TASK_ID}]}
num_feats=8000

for seed in 42 1; do
    results_dir=./02_classify_mutations/results/dosage_effects/drop_target
    cmd="python 02_classify_mutations/run_mutation_classification.py "
    cmd+="--gene_set custom "
    cmd+="--custom_genes $gene "
    cmd+="--overlap_data_types expression "
    cmd+="--results_dir $results_dir "
    cmd+="--num_features $num_feats "
    cmd+="--seed $seed "
    cmd+="--training_data expression "
    cmd+="--drop_target "
    echo "Running: $cmd"
    eval $cmd
done

echo "Job complete"
